name: Go package

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  DB_USER: task
  DB_PASSWORD: password
  DB_ROOT_PASSWORD: password
  DB_HOST: localhost
  DB_PORT: 3306
  DB_DATABASE_NAME: task

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_USER: ${{ env.DB_USER}}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD}}
          MYSQL_ROOT_PASSWORD: ${{ env.DB_ROOT_PASSWORD}}
          MYSQL_HOST: ${{ env.DB_HOST}}
          MYSQL_PORT: ${{ env.DB_PORT}}
          MYSQL_DATABASE: ${{ env.DB_DATABASE_NAME}}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Install tools
        run: |
          # migrate
          go install -tags mysql github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          # sqlboiler
          go install github.com/volatiletech/sqlboiler/v4@latest
          go install github.com/volatiletech/sqlboiler/v4/drivers/sqlboiler-mysql@latest
          # oapi-codegen
          go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest

      - name: Run Migration
        run: migrate -path db/migrations -database "mysql://$DB_USER:$DB_PASSWORD@tcp($DB_HOST:$DB_PORT)/$DB_DATABASE_NAME?multiStatements=true" up

      - name: Generate
        run: |
          sqlboiler mysql
          mkdir -p generated/interfaces/openapi
          oapi-codegen -old-config-style -templates oapi-codegen/templates/ -generate types,server,spec -package openapi -o generated/interfaces/openapi/task.gen.go sample-task-openapi/openapi.yaml

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
